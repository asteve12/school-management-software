user  nginx;
worker_processes  1;
error_log  stderr info;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  default_type  application/octet-stream;
  sendfile       on;
  tcp_nopush     on;
  keepalive_timeout  65;
  access_log     off;
  # Get real ip address from cloudflare
  set_real_ip_from 204.93.240.0/24;
  set_real_ip_from 204.93.177.0/24;
  set_real_ip_from 199.27.128.0/21;
  set_real_ip_from 173.245.48.0/20;
  set_real_ip_from 103.21.244.0/22;
  set_real_ip_from 103.22.200.0/22;
  set_real_ip_from 103.31.4.0/22;
  set_real_ip_from 141.101.64.0/18;
  set_real_ip_from 108.162.192.0/18;
  set_real_ip_from 190.93.240.0/20;
  set_real_ip_from 188.114.96.0/20;
  set_real_ip_from 197.234.240.0/22;
  set_real_ip_from 198.41.128.0/17;
  set_real_ip_from 162.158.0.0/15;
  real_ip_header CF-Connecting-IP;

  server {
    listen 80;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;

    ssl_certificate /ssl/localhost.crt;
    ssl_certificate_key /ssl/localhost.key;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    error_log /var/log/nginx/error.log;

    location / {
      proxy_set_header        Host               $host;
      proxy_set_header        X-Real-IP          $remote_addr;
      proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Host   $host:443;
      proxy_set_header        X-Forwarded-Server $host;
      proxy_set_header        X-Forwarded-Port   443;
      proxy_set_header        X-Forwarded-Proto  https;
      proxy_pass              http://$TARGET_HOST:$TARGET_PORT;

      location = /sw.js {
        expires 0d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location /page-data/ {
        expires 0d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location /api {
        expires 0d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location /auth {
        expires 0d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location /app-data.json {
        expires 0d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location /static/ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, immutable";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }

      location ~* \.(js|css|woff2)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, immutable";
        proxy_pass http://$TARGET_HOST:$TARGET_PORT;
      }
    }
  }
  client_max_body_size 10M;
}
